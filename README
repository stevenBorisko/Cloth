Simple cloth mesh simulator using springs. This is a work in progress,
	so there are, inevitably, many things wrong

The drawing of each object uses OpenGL. If you want to change that,
	that will be in each Displayable's `draw` function

- - - - Setup - - - -

- - Using the sample driver given in SampleDriver/

Sample driver setup:
	Copy main.cpp and Makefile from SampleDriver/ to one level higher than Cloth/
		Meaning Cloth/, main.cpp, and Makefile will be in the same directory
		at the same level

Using the sample Makefile to compile:
- Before compilation after pull, you MUST execute `make ObjectDirectory`
- Compile: `make`
- Compile and run: `make test`
- Compile, run, and record: `make record`
	This puts the recording into `output.mp4`
	If you don't rename this everytime you run,
		it will overwrite the previous recording
- Clean: `make clean`

- - Using your own Makefile

Makefile setup:
- Include Cloth's makefile with
	include Cloth/Cloth.mk
- Add as a prerequisite for your executable target
	$(CLOTH_MAIN_OBJ)
- Add as a prerequisite for your clean target
	ClothClean
- Call `make ClothObjectDirectory` before compiling after pull

- - - - Buzzwords - - - -

Particle: ParticleBinding.hpp
	Has zero to many bindings

Binding: ParticleBinding.hpp
	Has exactly two particles

Triangle: Triangle.hpp
	Has three bindings

Scene: Scene.hpp
	Stores all of the data in the environment
		- All the Bindings
		- All the Particles
		- Global settings like gravity
		- TIME_STEP constant

Physics: Physics.hpp
	Updates particle positions, velocities, and forces

Input: Input.hpp
	Generates a scene

Noteworthy header files within Cloth:
	src/DataStructures/ParticleBinding/ParticleBinding.hpp
	src/DataStructures/Scene/Scene.hpp
	src/DataStructures/Triangle/Triangle.hpp
	src/Input/Input.hpp
	src/Physics/Physics.hpp

- - - - How it works - - - -

A Binding connects two Particles.
	It sort of acts like a spring that has no mass but has a point mass
		(Particle) at each end of it.
	Neither of these should be manipulated without extreme caution with respect
		to thread safety.

- - - - Done - - - -

Gravity
Spring Forces
	Damping Forces
Collisions between particles of size
Pretty lines between particles
Thread safety

- - - - To do - - - -

Collisions between point particles
	Will be done with Triangle
Adaptive time step (swap scene)

- - - - Tree - - - -

.
|-- Cloth.mk
|-- lib
|   `-- Matrix4
|       |-- Matrix4.mk
|       |-- README
|       `-- src
|           |-- Constructors.cpp
|           |-- Friend.cpp
|           |-- Matrix4.hpp
|           |-- Miscellaneous.cpp
|           |-- OperatorOverloads.cpp
|           |-- Static.cpp
|           |-- Transformations.cpp
|           `-- Vector.cpp
|-- LICENSE
|-- README
|-- SampleDriver
|   |-- main.cpp
|   `-- Makefile
`-- src
    |-- DataStructures
    |   |-- ParticleBinding
    |   |   |-- Binding.cpp
    |   |   |-- ParticleBinding.hpp
    |   |   |-- ParticleBinding.mk
    |   |   `-- Particle.cpp
    |   |-- Scene
    |   |   |-- Scene.cpp
    |   |   |-- Scene.hpp
    |   |   `-- Scene.mk
    |   `-- Triangle
    |       |-- Constructors.cpp
    |       |-- Displayables.cpp
    |       |-- OperatorOverloads.cpp
    |       |-- Triangle.hpp
    |       `-- Triangle.mk
    |-- Input
    |   |-- FilePART.cpp
    |   |-- Grid.cpp
    |   |-- Input.hpp
    |   `-- Input.mk
    |-- Physics
    |   |-- Collisions.cpp
    |   |-- Forces.cpp
    |   |-- PhysicsEngine.cpp
    |   |-- Physics.hpp
    |   |-- Physics.mk
    |   `-- UpdateParticle.cpp
    `-- test.txt
